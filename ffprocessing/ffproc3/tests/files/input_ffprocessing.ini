[section_phase]
ph_phase = 'P'
ph_channel = ['BHZ']
ph_min_epi = 49.
ph_max_epi = 50.
# Background model
ph_bg = 'iasp91'
# sampling rate, lanczos method will be used for this reason
ph_sampling_rate = 10.
# preset and offset for reading the data,
# later (depends on the method), this can be changed
ph_preset = 20
ph_offset = 20
# Static preset and offset
# ph_static_preset/offset will be considered for the final length of CC or
# any other measurements
# In other words:
# ph_preset/offset (above): are used for ONLY cutting the waveforms. Take
#                           generous values as we do tapering.
# ph_static_preset/offset: are used for actual measurement (after filtering).
ph_static_preset = 5
ph_static_offset = 10

[section_check]
# check all the selected events (plotting)
check_evs = True
# check the theoretical arrival times
check_ttime = True
# check both the event and stations,
# only plots for one event
check_ev_stas = True
# check the cut syntehtic waveforms
check_cut_syn = True
# check the cut real waveforms
check_cut_real = True
# plot real and synthetic waveforms top of each other
# this will be run for different bands (set the following three flags)
check_cut_real_syn = True
check_bands = 1-8
# minimum cross-correlation factor to be used for plotting
check_min_cc = 0.8

# plotting the projection of the measrurements on the glob
check_measured_glob = True

[section_real]
real_mode = 'read'
real_path = '/home/hosseini/Work/Scripts/gitHUB/pyffproc/data/real_event'
# The directory name in each event folder in which the real data is stored
real_name_format = 'BH'
# integrate real data
int_real = False

[section_syn]
syn_mode = 'read'
syn_path = '/home/hosseini/Work/Scripts/gitHUB/pyffproc/data/syn_event'
# The directory name in each event folder in which the synthetics are stored
syn_name_format = 'SAC_realName'
# integrate synthetic data
int_syn = False

[section_event]
# reading the event information mode
evproc_mode = 'read'
evproc_path = '/home/hosseini/Work/Scripts/gitHUB/pyffproc/data/processed_event'
evproc_name_format = '*.*.*.*'
evproc_min_mag = 5.
evproc_max_mag = 8.5
evproc_min_depth = 60.
evproc_max_depth = 1000.
evproc_min_year = 2009
evproc_max_year = 2010

[section_stf]
# reading the event information mode
# read: read from the archive (similar to our original method)
# read_dmt: read archive retrieved with obspyDMT
# none: do nothing, simply
stf_mode = 'read'
# also convolve the "real" seismogram with stf?
# This is useful for "specfem" mode, i.e. for testing purposes
conv_real_stf = False

[section_measurement]
# CC-2step: original matlab code in which first the waveforms are aligned in
# the lowest frequency band and then CC is applied for all others
mmeant_mode = 'CC-2step'
# maximum time in the first and second CC steps
mmeant_clip_time1 = 7.
mmeant_clip_time2 = 2.

[section_output]
# event_based: similar to the original MATLAB code
output_format = 'original_karin'
output_dir = 'measurement_test'

[section_kernel]
kernel_output = True
# P/S wave
kernel_ps = 'P'
kernel_comp = 'Z'
kernel_misfit = 'CC'
kernel_min_cc = 0.4

[section_filter]
filt_mode = 'log-gabor'

[section_log_gabor]
# Only if filt_mode in section_filter is selected as log-gabor
# center period in sec of lowest passband filter
lgb_filt_pmax = 30
# number of bandpass filters (scales)
lgb_filt_nscale = 8
# multiplicative scale factor of filter center freqs
lgb_filt_fmult = 1.4142
# is the (fixed) ratio of sigma divided by fc, where sigma is the standard
# deviation of the Gaussian that describes the log-Gabor filter in the *time*
# domain, and fc is the filter's center frequency.Hence larger sigmaIfc means
# narrower bandwidth
lgb_filt_sigmaIfc = 0.5
# desired length of zero-padded time series Choose npad>=size(tsin,1)
lgb_filt_npad = 1024
lgb_filt_energy_frac = 0.95
lgb_filt_nlambda = 1.5
